---
name: CI Workflow

on:
  pull_request:

    branches:
      # - develop
      - test-develop

concurrency:
  group: ${{ github.ref }}-ci-workflow

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   continue-on-error: false
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"
  #         cache: 'npm'
  #         cache-dependency-path: frontend/package-lock.json

  #     # - name: Cache node modules
  #     #   uses: actions/cache@v3
  #     #   with:
  #     #     path: |
  #     #       frontend
  #     #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  #     - name: Install Dependencies
  #       run: |
  #         cd frontend
  #         npm ci

  #     - name: Build code
  #       run: |
  #         cd frontend
  #         npm run build

  merge_and_test:
    runs-on: ubuntu-latest
    # continue-on-error: false
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Merge Pull Request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          TARGET_BRANCH=${{ github.event.pull_request.base.ref }}
          # Fetch and checkout the PR branch
          git fetch origin pull/${PR_NUMBER}/head:pr/${PR_NUMBER}
          git checkout pr/${PR_NUMBER}
          # Attempt the merge
          if ! git merge --no-ff --no-edit origin/${TARGET_BRANCH}; then
            echo "Merge failed. Reverting changes."
            git merge --abort  # Abort the failed merge
            git reset --hard HEAD  # Reset the branch to the previous state
            git push --force origin HEAD  # Force push to update the PR branch
            echo "Changes reverted."
            exit 1  # Exit with a non-zero status to indicate the failure
          else
            git push origin HEAD  # Push the successful merge
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Test backend code using pytest
        run: |
          cd backend
          pytest tests

  rollback_on_failure:
    needs: merge_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Check Pytest exit code
        run: |
          if [[ ${{ job.status }} == 'failure' ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
            git reset --hard HEAD^
            git push --force origin HEAD
            echo "Rollback completed for PR #${PR_NUMBER}"
          fi
        if: ${{ always() }}
...
